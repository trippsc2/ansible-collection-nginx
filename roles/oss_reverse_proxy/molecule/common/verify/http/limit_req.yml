---
- name: Check if limit_req directive is set in HTTP config file
  loop: "{{ _http_config_file.limit_req | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: >-
      limit_req zone={{ item.zone -}}
        {{- ' burst=' + item.burst | string if item.burst is defined -}}
        {{- ' nodelay' if item.nodelay | default(false) else ' delay=' + item.delay | string if item.delay is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _limit_req_directive

- name: Verify limit_req directive is set in HTTP config file
  loop: "{{ _limit_req_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: limit_req directive is not set in HTTP config file.
    success_msg: limit_req directive is set in HTTP config file.
  loop_control:
    label: "{{ item.item }}"

- name: Check if limit_req_dry_run directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_dry_run is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "limit_req_dry_run {{ _http_config_file.limit_req_dry_run | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _limit_req_dry_run_directive

- name: Verify limit_req_dry_run directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_dry_run is defined
  ansible.builtin.assert:
    that:
      - not _limit_req_dry_run_directive.changed
    fail_msg: limit_req_dry_run directive is not set in HTTP config file.
    success_msg: limit_req_dry_run directive is set in HTTP config file.

- name: Check if limit_req_log_level directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_log_level is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "limit_req_log_level {{ _http_config_file.limit_req_log_level }};"
    owner: root
    group: root
    mode: '0640'
  register: _limit_req_log_level_directive

- name: Verify limit_req_log_level directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_log_level is defined
  ansible.builtin.assert:
    that:
      - not _limit_req_log_level_directive.changed
    fail_msg: limit_req_log_level directive is not set in HTTP config file.
    success_msg: limit_req_log_level directive is set in HTTP config file.

- name: Check if limit_req_status directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_status is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "limit_req_status {{ _http_config_file.limit_req_status }};"
    owner: root
    group: root
    mode: '0640'
  register: _limit_req_status_directive

- name: Verify limit_req_status directive is set in HTTP config file
  when:
    - _http_config_file.limit_req_status is defined
  ansible.builtin.assert:
    that:
      - not _limit_req_status_directive.changed
    fail_msg: limit_req_status directive is not set in HTTP config file.
    success_msg: limit_req_status directive is set in HTTP config file.

- name: Check if limit_req_zone directive is set in HTTP config file
  loop: "{{ _http_config_file.limit_req_zone | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "limit_req_zone {{ item.key }} zone={{ item.name }}:{{ item.size }} rate={{ item.rate }};"
    owner: root
    group: root
    mode: '0640'
  register: _limit_req_zone_directive

- name: Verify limit_req_zone directive is set in HTTP config file
  loop: "{{ _limit_req_zone_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: limit_req_zone directive is not set in HTTP config file.
    success_msg: limit_req_zone directive is set in HTTP config file.
  loop_control:
    label: "{{ item.item }}"
