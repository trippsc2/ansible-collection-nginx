---
- name: Check if ssl_buffer_size directive is set in server block
  when:
    - _server_block.ssl_buffer_size is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_buffer_size {{ _server_block.ssl_buffer_size }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_buffer_size_directive

- name: Verify ssl_buffer_size directive is set in server block
  when:
    - _server_block.ssl_buffer_size is defined
  ansible.builtin.assert:
    that:
      - not _ssl_buffer_size_directive.changed
    fail_msg: ssl_buffer_size directive is not set in server block.
    success_msg: ssl_buffer_size directive is set in server block.

- name: Check if ssl_certificate directive is set in server block
  loop: "{{ _server_block.ssl_certificate | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_certificate {{ item }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_certificate_directive

- name: Verify ssl_certificate directive is set in server block
  loop: "{{ _ssl_certificate_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: ssl_certificate directive is not set in server block.
    success_msg: ssl_certificate directive is set in server block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if ssl_certificate_key directive is set in server block
  loop: "{{ _server_block.ssl_certificate_key | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_certificate_key {{ item }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_certificate_key_directive

- name: Verify ssl_certificate_key directive is set in server block
  loop: "{{ _ssl_certificate_key_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: ssl_certificate_key directive is not set in server block.
    success_msg: ssl_certificate_key directive is set in server block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if ssl_ciphers directive is set in server block
  when:
    - _server_block.ssl_ciphers is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ciphers {{ _server_block.ssl_ciphers }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ciphers_directive

- name: Verify ssl_ciphers directive is set in server block
  when:
    - _server_block.ssl_ciphers is defined
  ansible.builtin.assert:
    that:
      - not _ssl_ciphers_directive.changed
    fail_msg: ssl_ciphers directive is not set in server block.
    success_msg: ssl_ciphers directive is set in server block.

- name: Check if ssl_client_certificate directive is set in server block
  when:
    - _server_block.ssl_client_certificate is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_client_certificate {{ _server_block.ssl_client_certificate }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_client_certificate_directive

- name: Verify ssl_client_certificate directive is set in server block
  when:
    - _server_block.ssl_client_certificate is defined
  ansible.builtin.assert:
    that:
      - not _ssl_client_certificate_directive.changed
    fail_msg: ssl_client_certificate directive is not set in server block.
    success_msg: ssl_client_certificate directive is set in server block.

- name: Check if ssl_conf_command directive is set in server block
  loop: "{{ _server_block.ssl_conf_command | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_conf_command {{ item }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_conf_command_directive

- name: Verify ssl_conf_command directive is set in server block
  loop: "{{ _ssl_conf_command_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: ssl_conf_command directive is not set in server block.
    success_msg: ssl_conf_command directive is set in server block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if ssl_crl directive is set in server block
  when:
    - _server_block.ssl_crl is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_crl {{ _server_block.ssl_crl }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_crl_directive

- name: Verify ssl_crl directive is set in server block
  when:
    - _server_block.ssl_crl is defined
  ansible.builtin.assert:
    that:
      - not _ssl_crl_directive.changed
    fail_msg: ssl_crl directive is not set in server block.
    success_msg: ssl_crl directive is set in server block.

- name: Check if ssl_dhparam directive is set in server block
  when:
    - _server_block.ssl_dhparam is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_dhparam {{ _server_block.ssl_dhparam }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_dhparam_directive

- name: Verify ssl_dhparam directive is set in server block
  when:
    - _server_block.ssl_dhparam is defined
  ansible.builtin.assert:
    that:
      - not _ssl_dhparam_directive.changed
    fail_msg: ssl_dhparam directive is not set in server block.
    success_msg: ssl_dhparam directive is set in server block.

- name: Check if ssl_early_data directive is set in server block
  when:
    - _server_block.ssl_early_data is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_early_data {{ _server_block.ssl_early_data | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_early_data_directive

- name: Verify ssl_early_data directive is set in server block
  when:
    - _server_block.ssl_early_data is defined
  ansible.builtin.assert:
    that:
      - not _ssl_early_data_directive.changed
    fail_msg: ssl_early_data directive is not set in server block.
    success_msg: ssl_early_data directive is set in server block.

- name: Check if ssl_ecdh_curve directive is set in server block
  when:
    - _server_block.ssl_ecdh_curve is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ecdh_curve {{ _server_block.ssl_ecdh_curve }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ecdh_curve_directive

- name: Verify ssl_ecdh_curve directive is set in server block
  when:
    - _server_block.ssl_ecdh_curve is defined
  ansible.builtin.assert:
    that:
      - not _ssl_ecdh_curve_directive.changed
    fail_msg: ssl_ecdh_curve directive is not set in server block.
    success_msg: ssl_ecdh_curve directive is set in server block.

- name: Check if ssl_ocsp directive is set in server block
  when:
    - _server_block.ssl_ocsp is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ocsp {{ _server_block.ssl_ocsp }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ocsp_directive

- name: Verify ssl_ocsp directive is set in server block
  when:
    - _server_block.ssl_ocsp is defined
  ansible.builtin.assert:
    that:
      - not _ssl_ocsp_directive.changed
    fail_msg: ssl_ocsp directive is not set in server block.
    success_msg: ssl_ocsp directive is set in server block.

- name: Check if ssl_ocsp_cache directive is set in server block (off)
  when:
    - _server_block.ssl_ocsp_cache is defined
    - _server_block.ssl_ocsp_cache.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ocsp_cache off;"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ocsp_cache_off_directive

- name: Verify ssl_ocsp_cache directive is set in server block (off)
  when:
    - _server_block.ssl_ocsp_cache is defined
    - _server_block.ssl_ocsp_cache.off | default(false)
  ansible.builtin.assert:
    that:
      - not _ssl_ocsp_cache_off_directive.changed
    fail_msg: ssl_ocsp_cache directive is not set in server block.
    success_msg: ssl_ocsp_cache directive is set in server block.

- name: Check if ssl_ocsp_cache directive is set in server block
  when:
    - _server_block.ssl_ocsp_cache is defined
    - not _server_block.ssl_ocsp_cache.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ocsp_cache {{ 'shared:' + _server_block.ssl_ocsp_cache.shared.name | string + ':' + _server_block.ssl_ocsp_cache.shared.size | string }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ocsp_cache_directive

- name: Verify ssl_ocsp_cache directive is set in server block
  when:
    - _server_block.ssl_ocsp_cache is defined
    - not _server_block.ssl_ocsp_cache.off | default(false)
  ansible.builtin.assert:
    that:
      - not _ssl_ocsp_cache_directive.changed
    fail_msg: ssl_ocsp_cache directive is not set in server block.
    success_msg: ssl_ocsp_cache directive is set in server block.

- name: Check if ssl_ocsp_responder directive is set in server block
  when:
    - _server_block.ssl_ocsp_responder is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_ocsp_responder {{ _server_block.ssl_ocsp_responder }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_ocsp_responder_directive

- name: Verify ssl_ocsp_responder directive is set in server block
  when:
    - _server_block.ssl_ocsp_responder is defined
  ansible.builtin.assert:
    that:
      - not _ssl_ocsp_responder_directive.changed
    fail_msg: ssl_ocsp_responder directive is not set in server block.
    success_msg: ssl_ocsp_responder directive is set in server block.

- name: Check if ssl_password_file directive is set in server block
  when:
    - _server_block.ssl_password_file is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_password_file {{ _server_block.ssl_password_file }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_password_file_directive

- name: Verify ssl_password_file directive is set in server block
  when:
    - _server_block.ssl_password_file is defined
  ansible.builtin.assert:
    that:
      - not _ssl_password_file_directive.changed
    fail_msg: ssl_password_file directive is not set in server block.
    success_msg: ssl_password_file directive is set in server block.

- name: Check if ssl_prefer_server_ciphers directive is set in server block
  when:
    - _server_block.ssl_prefer_server_ciphers is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_prefer_server_ciphers {{ _server_block.ssl_prefer_server_ciphers | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_prefer_server_ciphers_directive

- name: Verify ssl_prefer_server_ciphers directive is set in server block
  when:
    - _server_block.ssl_prefer_server_ciphers is defined
  ansible.builtin.assert:
    that:
      - not _ssl_prefer_server_ciphers_directive.changed
    fail_msg: ssl_prefer_server_ciphers directive is not set in server block.
    success_msg: ssl_prefer_server_ciphers directive is set in server block.

- name: Check if ssl_protocols directive is set in server block
  when:
    - _server_block.ssl_protocols is defined
    - _server_block.ssl_protocols.sslv2 | default(false) or
      _server_block.ssl_protocols.sslv3 | default(false) or
      _server_block.ssl_protocols.tls1 | default(false) or
      _server_block.ssl_protocols.tls11 | default(false) or
      _server_block.ssl_protocols.tls12 | default(false) or
      _server_block.ssl_protocols.tls13 | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: >-
      {{ '    ' }}ssl_protocols{{ ' SSLv2' if _server_block.ssl_protocols.sslv2 | default(false) -}}
        {{- ' SSLv3' if _server_block.ssl_protocols.sslv3 | default(false) -}}
        {{- ' TLSv1' if _server_block.ssl_protocols.tlsv1 | default(false) -}}
        {{- ' TLSv1.1' if _server_block.ssl_protocols.tlsv11 | default(false) -}}
        {{- ' TLSv1.2' if _server_block.ssl_protocols.tlsv12 | default(false) -}}
        {{- ' TLSv1.3' if _server_block.ssl_protocols.tlsv13 | default(false) }};
    owner: root
    group: root
    mode: '0640'
  register: _ssl_protocols_directive

- name: Verify ssl_protocols directive is set in server block
  when:
    - _server_block.ssl_protocols is defined
  ansible.builtin.assert:
    that:
      - not _ssl_protocols_directive.changed
    fail_msg: ssl_protocols directive is not set in server block.
    success_msg: ssl_protocols directive is set in server block.

- name: Check if ssl_reject_handshake directive is set in server block
  when:
    - _server_block.ssl_reject_handshake is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_reject_handshake {{ _server_block.ssl_reject_handshake | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_reject_handshake_directive

- name: Verify ssl_reject_handshake directive is set in server block
  when:
    - _server_block.ssl_reject_handshake is defined
  ansible.builtin.assert:
    that:
      - not _ssl_reject_handshake_directive.changed
    fail_msg: ssl_reject_handshake directive is not set in server block.
    success_msg: ssl_reject_handshake directive is set in server block.

- name: Check if ssl_session_cache directive is set in server block (off)
  when:
    - _server_block.ssl_session_cache is defined
    - _server_block.ssl_session_cache.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_session_cache off;"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_cache_off_directive

- name: Verify ssl_session_cache directive is set in server block (off)
  when:
    - _server_block.ssl_session_cache is defined
    - _server_block.ssl_session_cache.off | default(false)
  ansible.builtin.assert:
    that:
      - not _ssl_session_cache_off_directive.changed
    fail_msg: ssl_session_cache directive is not set in server block.
    success_msg: ssl_session_cache directive is set in server block.

- name: Check if ssl_session_cache directive is set in server block (none)
  when:
    - _server_block.ssl_session_cache is defined
    - not _server_block.ssl_session_cache.off | default(false)
    - _server_block.ssl_session_cache.none | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_session_cache none;"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_cache_none_directive

- name: Verify ssl_session_cache directive is set in server block (none)
  when:
    - _server_block.ssl_session_cache is defined
    - not _server_block.ssl_session_cache.off | default(false)
    - _server_block.ssl_session_cache.none | default(false)
  ansible.builtin.assert:
    that:
      - not _ssl_session_cache_none_directive.changed
    fail_msg: ssl_session_cache directive is not set in server block.
    success_msg: ssl_session_cache directive is set in server block.

- name: Check if ssl_session_cache directive is set in server block
  when:
    - _server_block.ssl_session_cache is defined
    - not _server_block.ssl_session_cache.off | default(false)
    - not _server_block.ssl_session_cache.none | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: >-
      {{ '    ' }}ssl_session_cache{%- if _server_block.ssl_session_cache.builtin is defined -%}
        {{- ' builtin:' + _server_block.ssl_session_cache.builtin.size | string if _server_block.ssl_session_cache.builtin.size is defined else ' builtin' -}}
        {%- endif -%}
        {{- ' shared:' + _server_block.ssl_session_cache.shared.name + ':' + _server_block.ssl_session_cache.shared.size if _server_block.ssl_session_cache.shared is defined -}};
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_cache_directive

- name: Verify ssl_session_cache directive is set in server block
  when:
    - _server_block.ssl_session_cache is defined
    - not _server_block.ssl_session_cache.off | default(false)
    - not _server_block.ssl_session_cache.none | default(false)
  ansible.builtin.assert:
    that:
      - not _ssl_session_cache_directive.changed
    fail_msg: ssl_session_cache directive is not set in server block.
    success_msg: ssl_session_cache directive is set in server block.

- name: Check if ssl_session_ticket_key directive is set in server block
  loop: "{{ _server_block.ssl_session_ticket_key | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_session_ticket_key {{ item }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_ticket_key_directive

- name: Verify ssl_session_ticket_key directive is set in server block
  loop: "{{ _ssl_session_ticket_key_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: ssl_session_ticket_key directive is not set in server block.
    success_msg: ssl_session_ticket_key directive is set in server block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if ssl_session_tickets directive is set in server block
  when:
    - _server_block.ssl_session_tickets is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_session_tickets {{ _server_block.ssl_session_tickets | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_tickets_directive

- name: Verify ssl_session_tickets directive is set in server block
  when:
    - _server_block.ssl_session_tickets is defined
  ansible.builtin.assert:
    that:
      - not _ssl_session_tickets_directive.changed
    fail_msg: ssl_session_tickets directive is not set in server block.
    success_msg: ssl_session_tickets directive is set in server block.

- name: Check if ssl_session_timeout directive is set in server block
  when:
    - _server_block.ssl_session_timeout is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_session_timeout {{ _server_block.ssl_session_timeout }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_session_timeout_directive

- name: Verify ssl_session_timeout directive is set in server block
  when:
    - _server_block.ssl_session_timeout is defined
  ansible.builtin.assert:
    that:
      - not _ssl_session_timeout_directive.changed
    fail_msg: ssl_session_timeout directive is not set in server block.
    success_msg: ssl_session_timeout directive is set in server block.

- name: Check if ssl_stapling directive is set in server block
  when:
    - _server_block.ssl_stapling is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_stapling {{ _server_block.ssl_stapling | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_stapling_directive

- name: Verify ssl_stapling directive is set in server block
  when:
    - _server_block.ssl_stapling is defined
  ansible.builtin.assert:
    that:
      - not _ssl_stapling_directive.changed
    fail_msg: ssl_stapling directive is not set in server block.
    success_msg: ssl_stapling directive is set in server block.

- name: Check if ssl_stapling_file directive is set in server block
  when:
    - _server_block.ssl_stapling_file is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_stapling {{ _server_block.ssl_stapling_file }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_stapling_file_directive

- name: Verify ssl_stapling_file directive is set in server block
  when:
    - _server_block.ssl_stapling_file is defined
  ansible.builtin.assert:
    that:
      - not _ssl_stapling_file_directive.changed
    fail_msg: ssl_stapling_file directive is not set in server block.
    success_msg: ssl_stapling_file directive is set in server block.

- name: Check if ssl_stapling_responder directive is set in server block
  when:
    - _server_block.ssl_stapling_responder is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_stapling {{ _server_block.ssl_stapling_responder }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_stapling_responder_directive

- name: Verify ssl_stapling_responder directive is set in server block
  when:
    - _server_block.ssl_stapling_responder is defined
  ansible.builtin.assert:
    that:
      - not _ssl_stapling_responder_directive.changed
    fail_msg: ssl_stapling_responder directive is not set in server block.
    success_msg: ssl_stapling_responder directive is set in server block.

- name: Check if ssl_stapling_verify directive is set in server block
  when:
    - _server_block.ssl_stapling_verify is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_stapling_verify {{ _server_block.ssl_stapling_verify | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_stapling_verify_directive

- name: Verify ssl_stapling_verify directive is set in server block
  when:
    - _server_block.ssl_stapling_verify is defined
  ansible.builtin.assert:
    that:
      - not _ssl_stapling_verify_directive.changed
    fail_msg: ssl_stapling_verify directive is not set in server block.
    success_msg: ssl_stapling_verify directive is set in server block.

- name: Check if ssl_trusted_certificate directive is set in server block
  when:
    - _server_block.ssl_trusted_certificate is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_trusted_certificate {{ _server_block.ssl_trusted_certificate }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_trusted_certificate_directive

- name: Verify ssl_trusted_certificate directive is set in server block
  when:
    - _server_block.ssl_trusted_certificate is defined
  ansible.builtin.assert:
    that:
      - not _ssl_trusted_certificate_directive.changed
    fail_msg: ssl_trusted_certificate directive is not set in server block.
    success_msg: ssl_trusted_certificate directive is set in server block.

- name: Check if ssl_verify_client directive is set in server block
  when:
    - _server_block.ssl_verify_client is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_verify_client {{ _server_block.ssl_verify_client }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_verify_client_directive

- name: Verify ssl_verify_client directive is set in server block
  when:
    - _server_block.ssl_verify_client is defined
  ansible.builtin.assert:
    that:
      - not _ssl_verify_client_directive.changed
    fail_msg: ssl_verify_client directive is not set in server block.
    success_msg: ssl_verify_client directive is set in server block.

- name: Check if ssl_verify_depth directive is set in server block
  when:
    - _server_block.ssl_verify_depth is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: server {
    line: "    ssl_verify_depth {{ _server_block.ssl_verify_depth }};"
    owner: root
    group: root
    mode: '0640'
  register: _ssl_verify_depth_directive

- name: Verify ssl_verify_depth directive is set in server block
  when:
    - _server_block.ssl_verify_depth is defined
  ansible.builtin.assert:
    that:
      - not _ssl_verify_depth_directive.changed
    fail_msg: ssl_verify_depth directive is not set in server block.
    success_msg: ssl_verify_depth directive is set in server block.
