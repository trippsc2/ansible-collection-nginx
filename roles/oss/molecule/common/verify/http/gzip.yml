---
- name: Check if gzip directive is set in HTTP config file
  when:
    - _http_config_file.gzip is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip {{ _http_config_file.gzip | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_directive

- name: Verify gzip directive is set in HTTP config file
  when:
    - _http_config_file.gzip is defined
  ansible.builtin.assert:
    that:
      - not _gzip_directive.changed
    fail_msg: gzip directive is not set in HTTP config file.
    success_msg: gzip directive is set in HTTP config file.

- name: Check if gzip_buffers directive is set in HTTP config file
  when:
    - _http_config_file.gzip_buffers is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_buffers {{ _http_config_file.gzip_buffers.number }} {{ _http_config_file.gzip_buffers.size }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_buffers_directive

- name: Verify gzip_buffers directive is set in HTTP config file
  when:
    - _http_config_file.gzip_buffers is defined
  ansible.builtin.assert:
    that:
      - not _gzip_buffers_directive.changed
    fail_msg: gzip_buffers directive is not set in HTTP config file.
    success_msg: gzip_buffers directive is set in HTTP config file.

- name: Check if gzip_comp_level directive is set in HTTP config file
  when:
    - _http_config_file.gzip_comp_level is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_comp_level {{ _http_config_file.gzip_comp_level }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_comp_level_directive

- name: Verify gzip_comp_level directive is set in HTTP config file
  when:
    - _http_config_file.gzip_comp_level is defined
  ansible.builtin.assert:
    that:
      - not _gzip_comp_level_directive.changed
    fail_msg: gzip_comp_level directive is not set in HTTP config file.
    success_msg: gzip_comp_level directive is set in HTTP config file.

- name: Check if gzip_disable directive is set in HTTP config file
  when:
    - _http_config_file.gzip_disable is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_disable {{ _http_config_file.gzip_disable | join(' ') }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_disable_directive

- name: Verify gzip_disable directive is set in HTTP config file
  when:
    - _http_config_file.gzip_disable is defined
  ansible.builtin.assert:
    that:
      - not _gzip_disable_directive.changed
    fail_msg: gzip_disable directive is not set in HTTP config file.
    success_msg: gzip_disable directive is set in HTTP config file.

- name: Check if gzip_http_version directive is set in HTTP config file
  when:
    - _http_config_file.gzip_http_version is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_http_version {{ _http_config_file.gzip_http_version }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_http_version_directive

- name: Verify gzip_http_version directive is set in HTTP config file
  when:
    - _http_config_file.gzip_http_version is defined
  ansible.builtin.assert:
    that:
      - not _gzip_http_version_directive.changed
    fail_msg: gzip_http_version directive is not set in HTTP config file.
    success_msg: gzip_http_version directive is set in HTTP config file.

- name: Check if gzip_min_length directive is set in HTTP config file
  when:
    - _http_config_file.gzip_min_length is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_min_length {{ _http_config_file.gzip_min_length }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_min_length_directive

- name: Verify gzip_min_length directive is set in HTTP config file
  when:
    - _http_config_file.gzip_min_length is defined
  ansible.builtin.assert:
    that:
      - not _gzip_min_length_directive.changed
    fail_msg: gzip_min_length directive is not set in HTTP config file.
    success_msg: gzip_min_length directive is set in HTTP config file.

- name: Check if gzip_proxied directive is set in HTTP config file (off)
  when:
    - _http_config_file.gzip_proxied is defined
    - _http_config_file.gzip_proxied.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: gzip_proxied off;
    owner: root
    group: root
    mode: '0640'
  register: _gzip_proxied_off_directive

- name: Verify gzip_proxied directive is set in HTTP config file (off)
  when:
    - _http_config_file.gzip_proxied is defined
    - _http_config_file.gzip_proxied.off | default(false)
  ansible.builtin.assert:
    that:
      - not _gzip_proxied_off_directive.changed
    fail_msg: gzip_proxied directive is not set in HTTP config file.
    success_msg: gzip_proxied directive is set in HTTP config file.

- name: Check if gzip_proxied directive is set in HTTP config file (any)
  when:
    - _http_config_file.gzip_proxied is defined
    - not _http_config_file.gzip_proxied.off | default(false)
    - _http_config_file.gzip_proxied.any | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: gzip_proxied any;
    owner: root
    group: root
    mode: '0640'
  register: _gzip_proxied_any_directive

- name: Verify gzip_proxied directive is set in HTTP config file (any)
  when:
    - _http_config_file.gzip_proxied is defined
    - not _http_config_file.gzip_proxied.off | default(false)
    - _http_config_file.gzip_proxied.any | default(false)
  ansible.builtin.assert:
    that:
      - not _gzip_proxied_any_directive.changed
    fail_msg: gzip_proxied directive is not set in HTTP config file.
    success_msg: gzip_proxied directive is set in HTTP config file.

- name: Check if gzip_proxied directive is set in HTTP config file
  when:
    - _http_config_file.gzip_proxied is defined
    - not _http_config_file.gzip_proxied.off | default(false)
    - not _http_config_file.gzip_proxied.any | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_proxied {{ _http_config_file.gzip_proxied.conditions | join(' ') }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_proxied_directive

- name: Verify gzip_proxied directive is set in HTTP config file
  when:
    - _http_config_file.gzip_proxied is defined
    - not _http_config_file.gzip_proxied.off | default(false)
    - not _http_config_file.gzip_proxied.any | default(false)
  ansible.builtin.assert:
    that:
      - not _gzip_proxied_directive.changed
    fail_msg: gzip_proxied directive is not set in HTTP config file.
    success_msg: gzip_proxied directive is set in HTTP config file.

- name: Check if gzip_types directive is set in HTTP config file
  when:
    - _http_config_file.gzip_types is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_types {{ _http_config_file.gzip_types | join(' ') }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_types_directive

- name: Verify gzip_types directive is set in HTTP config file
  when:
    - _http_config_file.gzip_types is defined
  ansible.builtin.assert:
    that:
      - not _gzip_types_directive.changed
    fail_msg: gzip_types directive is not set in HTTP config file.
    success_msg: gzip_types directive is set in HTTP config file.

- name: Check if gzip_vary directive is set in HTTP config file
  when:
    - _http_config_file.gzip_vary is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_vary {{ _http_config_file.gzip_vary | ternary('on', 'off') }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_vary_directive

- name: Verify gzip_vary directive is set in HTTP config file
  when:
    - _http_config_file.gzip_vary is defined
  ansible.builtin.assert:
    that:
      - not _gzip_vary_directive.changed
    fail_msg: gzip_vary directive is not set in HTTP config file.
    success_msg: gzip_vary directive is set in HTTP config file.

- name: Check if gzip_static directive is set in HTTP config file
  when:
    - _http_config_file.gzip_static is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: "gzip_static {{ _http_config_file.gzip_static }};"
    owner: root
    group: root
    mode: '0640'
  register: _gzip_static_directive

- name: Verify gzip_static directive is set in HTTP config file
  when:
    - _http_config_file.gzip_static is defined
  ansible.builtin.assert:
    that:
      - not _gzip_static_directive.changed
    fail_msg: gzip_static directive is not set in HTTP config file.
    success_msg: gzip_static directive is set in HTTP config file.
