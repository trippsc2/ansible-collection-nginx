---
- name: Check if server directive is set in upstream block
  loop: "{{ _upstream_block.server | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: >-
      {{ '    ' }}server {{ item.address -}}
        {{- ' weight=' + item.weight | string if item.weight is defined -}}
        {{- ' max_conns=' + item.max_conns | string if item.max_conns is defined -}}
        {{- ' max_fails=' + item.max_fails | string if item.max_fails is defined -}}
        {{- ' fail_timeout=' + item.fail_timeout | string if item.fail_timeout is defined -}}
        {{- ' backup' if item.backup | default(false) -}}
        {{- ' down' if item.down | default(false) }};
    owner: root
    group: root
    mode: '0640'
  register: _server_directive

- name: Verify server directive is set in upstream block
  loop: "{{ _server_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: server directive is not set in upstream block.
    success_msg: server directive is set in upstream block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if zone directive is set in upstream block
  when:
    - _upstream_block.zone is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: >-
      {{ '    ' }}zone {{ _upstream_block.zone.name -}}
        {{- ' ' + _upstream_block.zone.size | string if _upstream_block.zone.size is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _zone_directive

- name: Verify zone directive is set in upstream block
  when:
    - _upstream_block.zone is defined
  ansible.builtin.assert:
    that:
      - not _zone_directive.changed
    fail_msg: zone directive is not set in upstream block.
    success_msg: zone directive is set in upstream block.

- name: Check if hash directive is set in upstream block
  when:
    - _upstream_block.hash is defined
    - _upstream_block.load_balance_method == 'hash'
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: >-
      {{ '    ' }}hash {{ _upstream_block.hash.key -}}
        {{- ' consistent' if _upstream_block.hash.consistent | default(false) }};
    owner: root
    group: root
    mode: '0640'
  register: _hash_directive

- name: Verify hash directive is set in upstream block
  when:
    - _upstream_block.hash is defined
  ansible.builtin.assert:
    that:
      - not _hash_directive.changed
    fail_msg: hash directive is not set in upstream block.
    success_msg: hash directive is set in upstream block.

- name: Check if ip_hash directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'ip_hash'
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    ip_hash;"
    owner: root
    group: root
    mode: '0640'
  register: _ip_hash_directive

- name: Verify ip_hash directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'ip_hash'
  ansible.builtin.assert:
    that:
      - not _ip_hash_directive.changed
    fail_msg: ip_hash directive is not set in upstream block.
    success_msg: ip_hash directive is set in upstream block.

- name: Check if least_conn directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'least_conn'
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    least_conn;"
    owner: root
    group: root
    mode: '0640'
  register: _least_conn_directive

- name: Verify least_conn directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'least_conn'
  ansible.builtin.assert:
    that:
      - not _least_conn_directive.changed
    fail_msg: least_conn directive is not set in upstream block.
    success_msg: least_conn directive is set in upstream block.

- name: Check if random directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'random'
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: >-
      {{ '    ' }}random{% if (_http_config_file.random | default({})).two is defined -%}
        {{- ' two' -}}
        {{- ' ' + _http_config_file.random.two.method | string if _http_config_file.random.two.method is defined -}}
        {%- endif %};
    owner: root
    group: root
    mode: '0640'
  register: _random_directive

- name: Verify random directive is set in upstream block
  when:
    - _upstream_block.load_balancing_method == 'random'
  ansible.builtin.assert:
    that:
      - not _random_directive.changed
    fail_msg: random directive is not set in upstream block.
    success_msg: random directive is set in upstream block.

- name: Check if keepalive directive is set in upstream block
  when:
    - _upstream_block.keepalive is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    keepalive {{ _upstream_block.keepalive }};"
    owner: root
    group: root
    mode: '0640'
  register: _keepalive_directive

- name: Verify keepalive directive is set in upstream block
  when:
    - _upstream_block.keepalive is defined
  ansible.builtin.assert:
    that:
      - not _keepalive_directive.changed
    fail_msg: keepalive directive is not set in upstream block.
    success_msg: keepalive directive is set in upstream block.

- name: Check if keepalive_requests directive is set in upstream block
  when:
    - _upstream_block.keepalive_requests is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    keepalive_requests {{ _upstream_block.keepalive_requests }};"
    owner: root
    group: root
    mode: '0640'
  register: _keepalive_requests_directive

- name: Verify keepalive_requests directive is set in upstream block
  when:
    - _upstream_block.keepalive_requests is defined
  ansible.builtin.assert:
    that:
      - not _keepalive_requests_directive.changed
    fail_msg: keepalive_requests directive is not set in upstream block.
    success_msg: keepalive_requests directive is set in upstream block.

- name: Check if keepalive_time directive is set in upstream block
  when:
    - _upstream_block.keepalive_time is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    keepalive_time {{ _upstream_block.keepalive_time }};"
    owner: root
    group: root
    mode: '0640'
  register: _keepalive_time_directive

- name: Verify keepalive_time directive is set in upstream block
  when:
    - _upstream_block.keepalive_time is defined
  ansible.builtin.assert:
    that:
      - not _keepalive_time_directive.changed
    fail_msg: keepalive_time directive is not set in upstream block.
    success_msg: keepalive_time directive is set in upstream block.

- name: Check if keepalive_timeout directive is set in upstream block
  when:
    - _upstream_block.keepalive_timeout is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "upstream {{ _upstream_block.name }} {"
    line: "    keepalive_timeout {{ _upstream_block.keepalive_timeout }};"
    owner: root
    group: root
    mode: '0640'
  register: _keepalive_timeout_directive

- name: Verify keepalive_timeout directive is set in upstream block
  when:
    - _upstream_block.keepalive_timeout is defined
  ansible.builtin.assert:
    that:
      - not _keepalive_timeout_directive.changed
    fail_msg: keepalive_timeout directive is not set in upstream block.
    success_msg: keepalive_timeout directive is set in upstream block.
