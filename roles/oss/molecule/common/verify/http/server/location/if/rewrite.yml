---
- name: Check if rewrite_log directive is set in location if block
  when:
    - _location_if_block.rewrite_log is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: >-
      {{ '        ' }}if ({{ _location_if_block.condition }}) {
    line: >-
      {{ '            ' }}rewrite_log {{ _location_if_block.rewrite_log | ternary('on', 'off') }};
    owner: root
    group: root
    mode: '0640'
  register: _rewrite_log_directive

- name: Verify rewrite_log directive is set in location if block
  when:
    - _location_if_block.rewrite_log is defined
  ansible.builtin.assert:
    that:
      - not _rewrite_log_directive.changed
    fail_msg: rewrite_log directive is not set in location if block.
    success_msg: rewrite_log directive is set in location if block.

- name: Check if uninitialized_variable_warn directive is set in location if block
  when:
    - _location_if_block.uninitialized_variable_warn is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: >-
      {{ '        ' }}if ({{ _location_if_block.condition }}) {
    line: >-
      {{ '            ' }}uninitialized_variable_warn {{ _location_if_block.uninitialized_variable_warn | ternary('on', 'off') }};
    owner: root
    group: root
    mode: '0640'
  register: _uninitialized_variable_warn_directive

- name: Verify uninitialized_variable_warn directive is set in location if block
  when:
    - _location_if_block.uninitialized_variable_warn is defined
  ansible.builtin.assert:
    that:
      - not _uninitialized_variable_warn_directive.changed
    fail_msg: uninitialized_variable_warn directive is not set in location if block.
    success_msg: uninitialized_variable_warn directive is set in location if block.

- name: Check if return directive is set in location if block
  when:
    - _location_if_block.return is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: >-
      {{ '        ' }}if ({{ _location_if_block.condition }}) {
    line: >-
      {{ '            ' }}return{{ ' ' + _location_if_block.return.code | string if _location_if_block.return.code is defined -}}
                                {{- ' ' + _location_if_block.return.url | string if _location_if_block.return.url is defined -}}
                                {{- ' ' + _location_if_block.return.text | string if _location_if_block.return.text is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _return_directive

- name: Verify return directive is set in location if block
  when:
    - _location_if_block.uninitialized_variable_warn is defined
  ansible.builtin.assert:
    that:
      - not _return_directive.changed
    fail_msg: return directive is not set in location if block.
    success_msg: return directive is set in location if block.

- name: Check if rewrite directive is set in location if block
  loop: "{{ _location_if_block.rewrite | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "        if ({{ _location_if_block.condition }}) {"
    line: >-
      {{ '            ' }}rewrite {{ item.regex }} {{ item.replacement -}}
        {{- ' ' + item.flag | string if item.flag is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _rewrite_directive

- name: Verify rewrite directive is set in location if block
  loop: "{{ _rewrite_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: rewrite directive is not set in location if block.
    success_msg: rewrite directive is set in location if block.
  loop_control:
    label: "{{ item.item }}"

- name: Check if set directive is set in location if block
  loop: "{{ _location_if_block.set | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "        if ({{ _location_if_block.condition }}) {"
    line: "            set {{ item.variable }} {{ item.value }};"
    owner: root
    group: root
    mode: '0640'
  register: _set_directive

- name: Verify set directive is set in location if block
  loop: "{{ _set_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: set directive is not set in location if block.
    success_msg: set directive is set in location if block.
  loop_control:
    label: "{{ item.item }}"
