---
- name: Check if access_log directive is set in HTTP config file (off)
  when:
    - _http_config_file.access_log is defined
    - _http_config_file.access_log.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: access_log off;
    owner: root
    group: root
    mode: '0640'
  register: _access_log_off_directive

- name: Verify access_log directive is set in HTTP config file (off)
  when:
    - _http_config_file.access_log is defined
    - _http_config_file.access_log.off | default(false)
  ansible.builtin.assert:
    that:
      - not _access_log_off_directive.changed
    fail_msg: access_log directive is not set in HTTP config file.
    success_msg: access_log directive is set in HTTP config file.

- name: Check if access_log directive is set in HTTP config file
  loop: "{{ _http_config_file.access_log.logs }}"
  when:
    - _http_config_file.access_log is defined
    - not _http_config_file.access_log.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: >-
      access_log {{ item.path -}}
        {%- if item.format is defined -%}
        {{- ' ' + item.format | string -}}
        {{- ' buffer=' + item.buffer | string if item.buffer is defined -}}
        {%- if item.gzip is defined -%}
        {{- ' gzip' -}}
        {{- '=' + item.gzip.level | string if item.gzip.level is defined -}}
        {%- endif -%}
        {{- ' flush=' + item.flush | string if item.flush is defined -}}
        {{- ' if=' + item.if | string if item.if is defined -}}
        {%- endif %};
    owner: root
    group: root
    mode: '0640'
  register: _access_log_directive

- name: Verify access_log directive is set in HTTP config file
  loop: "{{ _access_log_directive.results }}"
  when:
    - _http_config_file.access_log is defined
    - not _http_config_file.access_log.off | default(false)
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: access_log directive is not set in HTTP config file.
    success_msg: access_log directive is set in HTTP config file.
  loop_control:
    label: "{{ item.item }}"

- name: Check if open_log_file_cache directive is set in HTTP config file (off)
  when:
    - _http_config_file.open_log_file_cache is defined
    - _http_config_file.open_log_file_cache.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: open_log_file_cache off;
    owner: root
    group: root
    mode: '0640'
  register: _open_log_file_cache_off_directive

- name: Verify open_log_file_cache directive is set in HTTP config file (off)
  when:
    - _http_config_file.open_log_file_cache is defined
    - _http_config_file.open_log_file_cache.off | default(false)
  ansible.builtin.assert:
    that:
      - not _open_log_file_cache_off_directive.changed
    fail_msg: open_log_file_cache directive is not set in HTTP config file.
    success_msg: open_log_file_cache directive is set in HTTP config file.

- name: Check if open_log_file_cache directive is set in HTTP config file
  when:
    - _http_config_file.open_log_file_cache is defined
    - not _http_config_file.open_log_file_cache.off | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: >-
      open_log_file_cache max={{ _http_config_file.open_log_file_cache.max -}}
        {{- ' inactive=' + _http_config_file.open_log_file_cache.inactive | string if _http_config_file.open_log_file_cache.inactive is defined -}}
        {{- ' min_uses=' + _http_config_file.open_log_file_cache.min_uses | string if _http_config_file.open_log_file_cache.min_uses is defined -}}
        {{- ' valid=' + _http_config_file.open_log_file_cache.valid | string if _http_config_file.open_log_file_cache.valid is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _open_log_file_cache_directive

- name: Verify open_log_file_cache directive is set in HTTP config file
  when:
    - _http_config_file.open_log_file_cache is defined
    - not _http_config_file.open_log_file_cache.off | default(false)
  ansible.builtin.assert:
    that:
      - not _open_log_file_cache_directive.changed
    fail_msg: open_log_file_cache directive is not set in HTTP config file.
    success_msg: open_log_file_cache directive is set in HTTP config file.

- name: Check if error_log directive is set in HTTP config file
  when:
    - _http_config_file.error_log is defined
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    line: >-
      error_log {{ _http_config_file.error_log.file -}}
        {{- ' ' + _http_config_file.error_log.level | string if _http_config_file.error_log.level is defined }};
    owner: root
    group: root
    mode: '0640'
  register: _error_log_directive

- name: Verify error_log directive is set in HTTP config file
  when:
    - _http_config_file.error_log is defined
  ansible.builtin.assert:
    that:
      - not _error_log_directive.changed
    fail_msg: error_log directive is not set in HTTP config file.
    success_msg: error_log directive is set in HTTP config file.
