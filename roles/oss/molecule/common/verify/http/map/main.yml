---
- name: Check hostnames directive is set in map block
  when:
    - _map_block.hostnames | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "map {{ _map_block.string }} {{ _map_block.variable }} {"
    line: "    hostnames;"
    owner: root
    group: root
    mode: '0640'
  register: _hostnames_directive

- name: Verify hostnames directive is set in map block
  when:
    - _map_block.hostnames | default(false)
  ansible.builtin.assert:
    that:
      - not _hostnames_directive.changed
    fail_msg: hostnames directive is not set in map block.
    success_msg: hostnames directive is set in map block.

- name: Check volatile directive is set in map block
  when:
    - _map_block.volatile | default(false)
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "map {{ _map_block.string }} {{ _map_block.variable }} {"
    line: "    volatile;"
    owner: root
    group: root
    mode: '0640'
  register: _volatile_directive

- name: Verify volatile directive is set in map block
  when:
    - _map_block.volatile | default(false)
  ansible.builtin.assert:
    that:
      - not _volatile_directive.changed
    fail_msg: volatile directive is not set in map block.
    success_msg: volatile directive is set in map block.

- name: Check directive is set in map block
  loop: "{{ _map_block.content | default([]) }}"
  become: true
  check_mode: true
  ansible.builtin.lineinfile:
    path: "{{ _http_config_file.destination }}"
    insertafter: "map {{ _map_block.string }} {{ _map_block.variable }} {"
    line: "    {{ item.match }} {{ item.value }};"
    owner: root
    group: root
    mode: '0640'
  register: _content_directive

- name: Verify directive is set in map block
  loop: "{{ _content_directive.results }}"
  ansible.builtin.assert:
    that:
      - not item.changed
    fail_msg: Directive is not set in map block.
    success_msg: Directive is set in map block.
  loop_control:
    label: "{{ item.item }}"
